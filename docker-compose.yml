version: '3.9'

services:
  db:
    image: postgres:15
    volumes:
      - app-db-data:/var/lib/postgresql/data
      - ./init-data.sh:/docker-entrypoint-initdb.d/init-data.sh
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    networks:
      - application
      - db
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}']
      interval: 5s
      timeout: 5s
      retries: 5

  pgadmin:
    image: dpage/pgadmin4
    depends_on:
      db:
        condition: service_healthy
    ports:
      - '5050:80'
    networks:
      - db
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_EMAIL}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_PASSWORD}

  redis:
    image: 'bitnami/redis:latest'
    volumes:
      - app-redis-data:/bitnami/redis/data
    environment:
      REDIS_PASSWORD: ${REDIS_PASSWORD}
    networks:
      - application
      - redis
    healthcheck:
      test: ['CMD', 'redis-cli', 'ping']
      interval: 5s
      timeout: 5s
      retries: 5

  redisinsight:
    image: redislabs/redisinsight:latest
    volumes:
      - redisinsight-data:/db
    depends_on:
      redis:
        condition: service_healthy
    ports:
      - '8001:8001'
    networks:
      - redis

  app:
    build:
      context: .
      args:
        NEXT_PUBLIC_CDN_ENDPOINT_URL: ${NEXT_PUBLIC_CDN_ENDPOINT_URL}
        NEXT_PUBLIC_S3_UPLOAD_RESOURCE_FORMATS: ${NEXT_PUBLIC_S3_UPLOAD_RESOURCE_FORMATS}
        NEXT_PUBLIC_NEXTAUTH_URL: ${NEXT_PUBLIC_NEXTAUTH_URL}
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    ports:
      - '3000:3000'
    networks:
      - application
    environment:
      DATABASE_URL: postgres://${POSTGRES_USER}:${POSTGRES_PASSWORD}@db:5432/${POSTGRES_DB}
      ANALYZE: ${ANALYZE}
      DISABLE_PWA: ${DISABLE_PWA}
      S3_UPLOAD_KEY: ${S3_UPLOAD_KEY}
      S3_UPLOAD_SECRET: ${S3_UPLOAD_SECRET}
      S3_UPLOAD_BUCKET: ${S3_UPLOAD_BUCKET}
      S3_UPLOAD_HOSTNAME: ${S3_UPLOAD_HOSTNAME}
      S3_UPLOAD_ENDPOINT_URL: ${S3_UPLOAD_ENDPOINT_URL}
      S3_UPLOAD_REGION: ${S3_UPLOAD_REGION}
      NEXT_PUBLIC_S3_UPLOAD_RESOURCE_FORMATS: ${NEXT_PUBLIC_S3_UPLOAD_RESOURCE_FORMATS}
      OPENAI_API_KEY: ${OPENAI_API_KEY}
      REDIS_URL: redis://:${REDIS_PASSWORD}@redis:6379/${REDIS_DB}
      NEXTAUTH_SECRET: ${NEXTAUTH_SECRET}
      NEXTAUTH_URL: ${NEXTAUTH_URL}
      NEXT_PUBLIC_NEXTAUTH_URL: ${NEXT_PUBLIC_NEXTAUTH_URL}
      MIREA_CLIENT_ID: ${MIREA_CLIENT_ID}
      MIREA_CLIENT_SECRET: ${MIREA_CLIENT_SECRET}
      GOOGLE_CLIENT_ID: ${GOOGLE_CLIENT_ID}
      GOOGLE_CLIENT_SECRET: ${GOOGLE_CLIENT_SECRET}
      GITHUB_CLIENT_ID: ${GITHUB_CLIENT_ID}
      GITHUB_CLIENT_SECRET: ${GITHUB_CLIENT_SECRET}
      CALLBACK_URL: ${CALLBACK_URL}
      CALLBACK_SECRET_URL_STRING: ${CALLBACK_SECRET_URL_STRING}
      VK_BOT_TOKEN: ${VK_BOT_TOKEN}
      VK_GROUP_ID: ${VK_GROUP_ID}
      TELEGRAM_BOT_TOKEN: ${TELEGRAM_BOT_TOKEN}
      TELEGRAM_BOT_NAME: ${TELEGRAM_BOT_NAME}
      IMAGE_CAPTION_HOST: ${IMAGE_CAPTION_HOST}
      INNGEST_SIGNING_KEY: ${INNGEST_SIGNING_KEY}

  image-caption:
    build: ./image-caption
    networks:
      - application
    environment:
      - OPENAI_API_KEY=${OPENAI_API_KEY}

networks:
  application:
  db:
  redis:

volumes:
  app-db-data:
  app-redis-data:
  redisinsight-data:
